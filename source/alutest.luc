module alutest (
  input clk,
  input rst,
  input a[36],  
  input alufn[5],
  input b[3],
    output debug[3],
   
           
  output result[36] ){  //output into mojo_top
    
  //import modules
  adder adder;
  sig a1[36];
  
  
  always{
  debug = 0;
  adder.a=a[34:30];
  adder.b=b;
  adder.alufn=alufn[1:0];
  a1=c{0,a[34:0]};
    
    
     if (alufn[1:0] == b11){
    result = a;
      debug = b001;
      }
    else{
    
    case (alufn[4:1]){    //first 4 bits of alufn
    
                              b1000: //player a
        debug = b010;
        adder.a=a[34:30];
        if (adder.sum==a[29:25]){
            result=c{1,a[34:0]};}          //error result, msb=1
        else if (b==b101){
            if (a[adder.sum]==1| a[adder.sum-d5]==1){
            result=c{1,a[34:0]};}
            else {result=c{0,adder.sum,a[29:0]};}}    
        else{  
        result=c{0,adder.sum,a[29:0]};}   
        
      b0100: //player b
        debug = b011;
         adder.a=a[29:25];
        if (adder.sum==a[34:30]){
            result=c{1,a[34:0]};}
          
       else if (b==b101){
          if (a[adder.sum]==1| a[adder.sum-d5]==1){
            result=c{1,a[34:0]};}
          else{
          result=c{0, a[34:30], adder.sum,a[24:0]};}}
       else {
          result=c{0, a[34:30], adder.sum,a[24:0]};}
        
      b0010: //wall cursor
        debug = b100;
        adder.a=a[24:20];
        result=c{0,a[34:25],adder.sum,a[19:0]};
        
        
      b0011: //wall enter
        debug = b101;
        if (a[a[24:20]]==1){
            result=c{1,a[34:0]};}
        else{
        
        a1[a[24:20]]=1;
        result=a1;}
            
       default:
        result = a;
        debug = b111;      
        
        }
    }
    }
  }
    